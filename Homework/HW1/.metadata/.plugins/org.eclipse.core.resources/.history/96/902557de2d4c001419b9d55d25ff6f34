package app;
import java.util.ArrayList;
import java.awt.image.BufferedImage;

/*push(dataItem): enters the data item onto the stack and returns nothing.
pop(): throws an exception if the stack is empty; otherwise returns the top element, removing it from the stack.
peek(): throws an exception if the stack is empty; otherwise returns the top element of the stack. However, unlike pop, it does not change the contents of the stack.
isEmpty(): returns true if there are no items in the stack; false otherwise.
clear(): makes the stack empty.
popWasLast(): returns true if the last push, pop, or clear operation was a pop and false otherwise. If neither a push nor a pop nor a clear has yet been executed, then false is returned.
getSize(): returns the number elements currently in the stack.
*/

public class ImageStack {
	private ArrayList<BufferedImage> edits;
	private boolean wasPop = false;
		
	//enters the data item onto the stack and returns nothing
	private void push(BufferedImage entry) {
		edits.add(entry);
	}
	
	//throws an exception if the stack is empty; otherwise returns the top element, removing it from the stack.
	private void pop() {
		edits.remove(edits.size() - 1);
		wasPop = true;
	}
	
	//throws an exception if the stack is empty; otherwise returns the top element of the stack. However, unlike pop, it does not change the contents of the stack.
	private BufferedImage peek() {
		return edits.get(edits.size() - 1);
	}
	
	//returns the number elements currently in the stack.
	private int getSize() {
		return edits.size();
	}
	
	//returns true if there are no items in the stack; false otherwise.
	private boolean isEmpty() {
		return edits.isEmpty();
	}
		
	//makes the stack empty.
	private void clear() {
		edits.clear();
		wasPop = false;
	}
	
	
	//returns true if the last push, pop, or clear operation was a pop and false otherwise. If neither a push nor a pop nor a clear has yet been executed, then false is returned.
	private boolean popWasLast() {
		return wasPop; 
	}
	
}
